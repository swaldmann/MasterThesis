{"version":3,"sources":["constants/AlgorithmConstants.js","components/JoinProblemSettings.js","actions/index.js","constants/ActionTypes.js","containers/VisibleJoinProblemSettings.js","math/QueryGraph.js","components/AlgorithmCanvas.js","containers/VisibleAlgorithmCanvas.js","components/VariableTableEntry.js","containers/VisibleVariableTableEntry.js","components/VariableTable.js","containers/VisibleVariableTable.js","AlgorithmVisualization.js","App.js","reducers/queryGraph.js","reducers/configuration.js","reducers/index.js","reducers/graphState.js","reducers/algorithm.js","reducers/routines.js","reducers/steps.js","reducers/step.js","serviceWorker.js","index.js"],"names":["QUERY_GRAPH_OPTIONS","value","label","ENDPOINT","marksStatic","3","4","5","6","7","8","9","10","JoinProblemSettings","props","handleNumberOfRelationsChange","numberOfRelations","actions","changeOptionNumberOfRelations","handleGraphTypeOptionChange","graphTypeOption","changeOptionQueryGraphType","handleAlgorithmChange","algorithm","changeOptionAlgorithm","state","selectedQueryGraphIndex","this","fetchAvailableAlgorithms","updateAlgorithm","fetch","response","json","updateAlgorithms","algorithms","settingNumberOfRelations","settingGraphTypeValue","changeQueryGraph","queryGraph","updateConfiguration","configuration","resetSteps","concatSteps","result","routine","concat","steps","routines","reduce","flatMap","loop","step","uuid","filter","hasOwnProperty","console","log","updateSteps","updateRoutines","updateCurrentStepUUID","updateGraphState","graphState","keyName","e","handle","graphTypeOptionValue","find","o","className","style","background","marks","handleStyle","border","height","width","marginTop","trackStyle","borderRadius","railStyle","dotStyle","transform","dots","onChange","min","defaultValue","max","name","placeholder","options","onKeyDown","bind","allowRepeat","onClick","React","Component","type","graphType","increaseStep","increase","decreaseStep","decrease","VisbleJoinProblemSettings","connect","dispatch","bindActionCreators","Actions","π","Math","PI","CanvasRenderingContext2D","prototype","roundRect","x","y","w","h","r","beginPath","moveTo","arcTo","closePath","QueryGraph","_queryGraph","_nodeColors","_numberOfNodes","numberOfNodes","relationCardinalities","length","Array","fill","nodeColors","ctx","forEach","nodeColor","nodeIndex","color","R","G","B","dpr","window","devicePixelRatio","rect","canvas","getBoundingClientRect","clearRect","clientWidth","clientHeight","scale","strokeStyle","fillStyle","_drawChainQuery","_drawStarQuery","_drawTreeQuery","_drawCyclicQuery","_drawCycleQuery","_drawGridQuery","_drawCliqueQuery","_drawMoerkotteQuery","i","cardinality","drawableWidth","margin","r_node","_drawNode","x_previous","selectivityKey","selectivity","selectivities","_drawEdge","x_center","y_center","θ","cos","sin","drawableHeight","y_offset","floor","log2","calculateRow","index","row","calculateNumberOfColumnsInRow","numberOfColumnsInRow","calculateColumn","calculateX","column","calculateY","parentIndex","row_previous","numberOfColumns_previous","y_previous","centerX","centerY","x0","y1","x2","y2","x3","y3","x4","y4","θ_next","x_next","y_next","arc","font","textBaseline","textAlign","fillText","oldFillColor","fillColor","textWidth","measureText","x_source","y_source","x_dest","y_dest","weight","compositeOperationBefore","globalCompositeOperation","lineTo","stroke","weightLabelCenterX","abs","weightLabelCenterY","oldFillStyle","labelText","toString","slice","join","labelWidth","labelHeight","fillRect","S","reverse","c","AlgorithmCanvas","counters","resize","algorithmCanvasRef","current","parentNode","redrawGraph","handleNextStep","nextStep","handlePreviousStep","previousStep","createRef","addEventListener","removeEventListener","prevProps","getContext","draw","isFirstStep","isLastStep","ref","disabled","VisbleAlgorithmCanvas","VariableTableEntry","parent","level","currentStepUUID","parentStyle","backgroundColor","fakeInsetStyle","borderLeft","marginLeft","observedRelations","map","A","key","identifier","s","VisibleVariableTableEntry","variables","description","VisbleVariableTableEntry","stepUUID","VariableTable","VisbleVariableTable","AlgorithmVisualization","VisibleJoinProblemSettings","VisibleAlgorithmCanvas","VisibleVariableTable","App","QUERY_GRAPH_DEFAULT","problemID","problemType","problemTypeFormatted","neighbors","0","1","relations","relationID","DEFAULT_CONFIGURATION","appReducer","combineReducers","action","rootReducer","undefined","Boolean","location","hostname","match","persistConfig","storage","persistedReducer","persistReducer","store","createStore","applyMiddleware","thunk","persistor","persistStore","ReactDOM","render","loading","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.ff6259ed.chunk.js","sourcesContent":["export const QUERY_GRAPH_OPTIONS = [\n    { value: \"chain\", label: \"Chain\" },\n    { value: \"star\", label: \"Star\" },\n    { value: \"tree\", label: \"Complete Binary Tree\" },\n    //{ value: \"cyclic\", label: \"Cyclic\" },\n    { value: \"cycle\", label: \"Cycle\" },\n    //{ value: \"grid\", label: \"Grid\" },\n    //{ value: \"clique\", label: \"Clique\" },\n    { value: \"moerkotte\", label: \"Moerkotte QueryCompiler 2018\" }\n]","import React from \"react\"\nimport Select from \"react-select\"\nimport Slider from 'rc-slider'\nimport Hotkeys from 'react-hot-keys'\nimport '../styles/App.css'\nimport \"rc-slider/assets/index.css\";\nimport { QUERY_GRAPH_OPTIONS } from \"../constants/AlgorithmConstants\"\n\nconst ENDPOINT = \"https://dbs-visualization.ew.r.appspot.com/api\" // Production\n//const ENDPOINT = \"http://localhost:8080/api\" // Local development\n\n// Create an array with values from 3 to 8 and store them in an object\n// For some reason this doesn't work, despite giving the same result as ``marksStatic``\n/*const marks = [...Array(6).keys()]\n              .map(x => x + 3)\n              .reduce((object, number) => Object.defineProperty(object, number, { value: number.toString() }), {})*/\n\n// Fallback for the above code\nconst marksStatic = {\n    3: \"3\",\n    4: \"4\",\n    5: \"5\",\n    6: \"6\",\n    7: \"7\",\n    8: \"8\",\n    9: \"9\",\n   10: \"10\",\n}\n\nclass JoinProblemSettings extends React.Component {\n    constructor(props) {\n        super(props)\n        this.state = {\n            selectedQueryGraphIndex: 4\n        }\n    }\n\n    async componentWillMount() {\n        await this.fetchAvailableAlgorithms()\n        await this.updateAlgorithm()\n    }\n\n    async fetchAvailableAlgorithms() {\n        const response = await fetch(ENDPOINT + \"/algorithms\")\n        const json = await response.json()\n        const { actions } = this.props\n        actions.updateAlgorithms(json.algorithms)\n        actions.changeOptionAlgorithm(json.algorithms[0])\n    }\n\n    async updateAlgorithm() {\n        const {\n            actions,\n            settingNumberOfRelations,\n            settingGraphTypeValue,\n            algorithms,\n            algorithm\n        } = this.props\n        const response = await fetch(ENDPOINT + \"/algorithm/\" + algorithm.value\n                                              + \"/relations/\" + settingNumberOfRelations\n                                              + \"/graphType/\" + settingGraphTypeValue)\n        const json = await response.json()\n        actions.changeQueryGraph(json.queryGraph)\n        actions.updateConfiguration(json.configuration)\n        actions.resetSteps()\n\n        const concatSteps = (result, routine) => result.concat(routine.steps)\n        const steps = json.routines.reduce(concatSteps, []).flatMap(function loop(step) {\n            if (step && step.steps && !step.uuid)\n                return step.steps.flatMap(loop)\n            else\n                return [step]\n        }).filter(step => step && step.hasOwnProperty(\"uuid\"))\n        console.log(steps);\n        actions.updateSteps(steps)\n        actions.updateRoutines(json.routines)\n        const firstStep = steps[0]\n        if (firstStep) {\n            actions.updateCurrentStepUUID(steps[0].uuid)\n            actions.updateGraphState(steps[0].graphState)\n        }\n    }\n\n    handleNumberOfRelationsChange = numberOfRelations => {\n        const actions = this.props.actions\n        actions.changeOptionNumberOfRelations(numberOfRelations)\n    }\n\n    handleGraphTypeOptionChange = graphTypeOption => {\n        const actions = this.props.actions\n        actions.changeOptionQueryGraphType(graphTypeOption.value)\n    }\n\n    handleAlgorithmChange = algorithm => {\n        const { actions } = this.props\n        actions.changeOptionAlgorithm(algorithm)\n    }\n\n    onKeyDown(keyName, e, handle) {\n        if (keyName === \"r\") {\n            this.updateAlgorithm()\n        }\n    }\n\n    render() {\n        const { graphTypeOptionValue, numberOfRelations, algorithms, algorithm } = this.props\n        if (!algorithms) {\n            return <div />\n        }\n        const graphTypeOption = QUERY_GRAPH_OPTIONS.find(o => o.value === graphTypeOptionValue)\n        console.log(\"Render\");\n\n        return (\n            <header className=\"grid\" style={{ background: \"#1f2329\" }}>\n                <div>\n                    <h5>Number of relations</h5>\n                    <Slider className=\"slider\"\n                                marks={marksStatic}\n                          handleStyle={{background:\"white\", border: 0, height:\"26px\", width:\"26px\", marginTop:\"-9px\"}}\n                           trackStyle={{background:\"white\", height: \"4px\", borderRadius:\"0px\"}}\n                            railStyle={{background:\"white\", height: \"4px\", borderRadius:\"0px\"}}\n                             dotStyle={{height:\"20px\", transform:\"translate(2px, 6px)\", border:\"none\", borderRadius:\"0px\", width:\"3px\"}}\n                                style={{width:\"100%\"}}\n                                 dots={true}\n                             onChange={this.handleNumberOfRelationsChange}\n                                  min={3}\n                         defaultValue={numberOfRelations}\n                                  max={10} />\n                </div>\n                <div>\n                    <h5>Graph Type</h5>\n                    <Select className=\"select\"\n                                 name=\"color\"\n                                style={{width:\"100%\"}}\n                         defaultValue={QUERY_GRAPH_OPTIONS[4]}\n                          placeholder=\"Query Graph\"\n                                value={graphTypeOption}\n                             onChange={this.handleGraphTypeOptionChange}\n                              options={QUERY_GRAPH_OPTIONS} />\n                    {\n                        graphTypeOption.value === \"tree\" &&\n                        <div className=\"info\">Only complete binary trees are supported.</div>\n                    }\n                </div>\n                <div>\n                    <h5>Algorithm</h5>\n                    {algorithm && <Select\n                            name=\"color\"\n                       className=\"select\"\n                     placeholder=\"Algorithm\"\n                           value={algorithm}\n                        onChange={this.handleAlgorithmChange}\n                         options={algorithms} />}\n                </div>\n                <div>\n                    <h5>Calculation</h5>\n                    <Hotkeys keyName=\"r\" onKeyDown={this.onKeyDown.bind(this)} allowRepeat={true} />\n                    <button className=\"emphasized\"\n                              onClick={() => this.updateAlgorithm()}>\n                        Recalculate Algorithm<span className=\"shortcut\">R</span>\n                    </button>\n                </div>\n            </header>\n        )\n    }\n}\n\nexport default JoinProblemSettings\n","import * as types from '../constants/ActionTypes'\n\n// Algorithm\nexport const updateAlgorithms = algorithms => ({ type: types.UPDATE_ALGORITHMS, algorithms })\n\n// Options\nexport const changeOptionNumberOfRelations = numberOfRelations => ({ type: types.CHANGE_QUERY_NUMBER_RELATIONS, numberOfRelations })\nexport const changeOptionQueryGraphType = graphType => ({ type: types.CHANGE_QUERY_GRAPH_TYPE, graphType })\nexport const changeOptionAlgorithm = algorithm => ({ type: types.CHANGE_ALGORITHM, algorithm })\n\n// Query Graph\nexport const changeQueryGraph = queryGraph => ({ type: types.CHANGE_QUERY_GRAPH, queryGraph })\nexport const updateGraphState = graphState => ({ type: types.UPDATE_GRAPH_STATE, graphState })\n\n// Routines\nexport const updateRoutines = routines => ({ type: types.UPDATE_ROUTINES, routines })\n\n// Steps\nexport const increaseStep = increase => ({ type: types.INCREASE_STEP, increase })\nexport const decreaseStep = decrease => ({ type: types.DECREASE_STEP, decrease })\nexport const resetSteps = () => ({ type: types.RESET_STEPS })\nexport const updateSteps = steps => ({ type: types.UPDATE_STEPS, steps })\nexport const updateCurrentStepUUID = uuid => ({ type: types.UPDATE_STEP_UUID, uuid })\n\n// Configuration (To be removed)\nexport const updateConfiguration = configuration => ({ type: types.UPDATE_CONFIGURATION, configuration })\n","// Query Graph\nexport const CHANGE_QUERY_GRAPH_TYPE = 'CHANGE_QUERY_GRAPH_TYPE'\nexport const CHANGE_QUERY_NUMBER_RELATIONS = 'CHANGE_QUERY_NUMBER_RELATIONS'\nexport const CHANGE_QUERY_GRAPH = 'CHANGE_QUERY_GRAPH'\n\n// Algorithms\nexport const CHANGE_ALGORITHM = 'CHANGE_ALGORITHM'\nexport const UPDATE_ALGORITHMS = 'UPDATE_ALGORITHMS'\n\n// Steps\nexport const UPDATE_STEPS = 'UPDATE_STEPS'\nexport const INCREASE_STEP = 'INCREASE_STEP'\nexport const DECREASE_STEP = 'DECREASE_STEP'\nexport const RESET_STEPS = 'RESET_STEPS'\n\nexport const UPDATE_STEP_UUID = 'UPDATE_STEP_UUID'\n\nexport const UPDATE_ROUTINES = 'UPDATE_ROUTINES'\n\nexport const UPDATE_GRAPH_STATE = 'UPDATE_GRAPH_STATE'\n\nexport const UPDATE_CONFIGURATION = 'UPDATE_CONFIGURATION'","import { connect } from 'react-redux'\nimport { bindActionCreators } from 'redux'\nimport JoinProblemSettings from '../components/JoinProblemSettings'\n\nimport * as Actions from '../actions'\n\nconst mapStateToProps = state => {\n    return {        \n        // Required to keep track of the currently selected \n        // settings without immedeately triggering a server\n        // request\n        numberOfRelations: state.settingNumberOfRelations,\n        graphTypeOptionValue: state.settingGraphTypeValue,\n        algorithms: state.algorithms,\n        algorithm: state.algorithm,\n\n        steps: state.steps,\n        settingNumberOfRelations: state.settingNumberOfRelations,\n        settingGraphTypeValue: state.settingGraphTypeValue,\n    }\n}\n\nconst mapDispatchToProps = dispatch => ({\n    actions: bindActionCreators(Actions, dispatch)\n})\n\nconst VisbleJoinProblemSettings = connect(\n    mapStateToProps,\n    mapDispatchToProps\n)(JoinProblemSettings)\n\nexport default VisbleJoinProblemSettings","const π = Math.PI\nconst r_node = 20\nconst margin = 24\n\nCanvasRenderingContext2D.prototype.roundRect = function (x, y, w, h, r) {\n    if (w < 2 * r) r = w / 2;\n    if (h < 2 * r) r = h / 2;\n    this.beginPath();\n    this.moveTo(x+r, y);\n    this.arcTo(x+w, y,   x+w, y+h, r);\n    this.arcTo(x+w, y+h, x,   y+h, r);\n    this.arcTo(x,   y+h, x,   y,   r);\n    this.arcTo(x,   y,   x+w, y,   r);\n    this.closePath();\n    return this;\n}\nclass QueryGraph {\n\n    _queryGraph = {}\n    _nodeColors = []\n    _numberOfNodes = 0\n\n    constructor(queryGraph) {\n        const numberOfNodes = queryGraph.relationCardinalities.length\n        this._queryGraph = queryGraph\n        this._numberOfNodes = numberOfNodes\n        this._nodeColors = Array(numberOfNodes).fill(\"white\")  \n    }\n    \n    draw(type, nodeColors, ctx) {\n        nodeColors.forEach(nodeColor => {\n            this._nodeColors[nodeColor.nodeIndex] = \"rgb(\" + nodeColor.color.R + \",\" + nodeColor.color.G + \",\" + nodeColor.color.B + \")\"\n        })\n\n        const dpr = window.devicePixelRatio || 1\n        const rect = ctx.canvas.getBoundingClientRect()\n        ctx.canvas.width = rect.width * dpr\n        ctx.canvas.height = rect.height * dpr\n        ctx.clearRect(0, 0, ctx.canvas.clientWidth, ctx.canvas.clientHeight)\n        ctx.scale(dpr, dpr)\n\n        ctx.strokeStyle = 'rgb(250, 250, 250)'\n        ctx.fillStyle = 'rgb(250, 250, 250)'\n\n        const numberOfNodes = this._numberOfNodes\n        switch(type) {\n            case \"chain\":\n                this._drawChainQuery(numberOfNodes, ctx)\n                break\n            case \"star\":\n                this._drawStarQuery(numberOfNodes, ctx)\n                break\n            case \"tree\":\n                this._drawTreeQuery(numberOfNodes, ctx)\n                break\n            case \"cyclic\":\n                this._drawCyclicQuery(numberOfNodes, ctx)\n                break\n            case \"cycle\":\n                this._drawCycleQuery(numberOfNodes, ctx)\n                break    \n            case \"grid\":\n                this._drawGridQuery(numberOfNodes, ctx)\n                break\n            case \"clique\":\n                this._drawCliqueQuery(numberOfNodes, ctx)\n                break\n            case \"moerkotte\":\n                this._drawMoerkotteQuery(ctx)\n                break\n            default:\n                break\n          } \n    }\n\n    _drawChainQuery(numberOfNodes, ctx) {\n        for (let i = 0; i < numberOfNodes; i++) {\n            const cardinality = this._queryGraph.relationCardinalities[i]\n            const drawableWidth = ctx.canvas.clientWidth - margin * 2 - r_node * 2\n            const x = margin + r_node + i * drawableWidth/(numberOfNodes - 1)\n            const y = 200\n            this._drawNode(i, x, y, \"white\", ctx, cardinality)\n\n            // Connect the lines\n            if (i !== 0) {\n                const x_previous = margin + r_node + (i - 1) * drawableWidth/(numberOfNodes - 1)\n                const y_previous = y\n                const selectivityKey = (1 << (i-1)) | (1 << i)\n                const selectivity = this._queryGraph.selectivities[selectivityKey]\n                this._drawEdge(x, y, x_previous, y_previous, ctx, selectivity)\n            }\n        }\n    }\n\n    _drawStarQuery(numberOfNodes, ctx) {\n        for (let i = 0; i < numberOfNodes; i++) {\n            const cardinality = this._queryGraph.relationCardinalities[i]\n            const x_center = ctx.canvas.clientWidth/2\n            const y_center = ctx.canvas.clientHeight/2\n\n            if (i === 0) { // Center node\n                this._drawNode(i, x_center, y_center, \"white\", ctx, cardinality)\n                continue\n            }\n            const θ = 2 * π/(numberOfNodes - 1) * i\n            const r = ctx.canvas.clientWidth/2 - r_node - margin\n            const x = r * Math.cos(θ) + r + r_node + margin\n            const y = r * Math.sin(θ) + r + r_node + margin\n\n            const selectivityKey = 1 | (1 << i)\n            const selectivity = this._queryGraph.selectivities[selectivityKey]\n            this._drawEdge(x, y, x_center, y_center, ctx, selectivity)\n            this._drawNode(i, x, y, \"white\", ctx, cardinality)\n        }\n    }\n\n    _drawTreeQuery(numberOfNodes, ctx) {\n        const drawableWidth = ctx.canvas.clientWidth - margin * 2 - r_node * 2\n        const drawableHeight = ctx.canvas.clientWidth - margin * 2 - r_node * 2\n        const x_center = ctx.canvas.clientWidth/2\n        const y_offset = drawableHeight/Math.floor(Math.log2(numberOfNodes))\n\n        for (let i = 0; i < numberOfNodes; i++) {\n            const cardinality = this._queryGraph.relationCardinalities[i]\n            if (i === 0) { // Root node\n                this._drawNode(i, x_center, margin + r_node, \"white\", ctx, cardinality)\n                continue\n            }\n            const calculateRow = index => Math.floor(Math.log2(index + 1))\n            const row = calculateRow(i)\n            const calculateNumberOfColumnsInRow = row => 2 ** row\n            const numberOfColumnsInRow = calculateNumberOfColumnsInRow(row)\n\n            const calculateColumn = (index, row) => index - 2 ** row + 1\n            const calculateX = (column, numberOfColumnsInRow) => (column + 0.5) * drawableWidth/numberOfColumnsInRow + margin + r_node\n            const calculateY = row => r_node + margin + y_offset * row\n            const column = calculateColumn(i, row)\n            const x = calculateX(column, numberOfColumnsInRow)\n            const y = calculateY(row)\n            this._drawNode(i, x, y, \"white\", ctx, cardinality)\n\n            const parentIndex = Math.floor((i - 1)/2)\n            const row_previous = calculateRow(parentIndex)\n            const numberOfColumns_previous = calculateNumberOfColumnsInRow(row_previous)\n            const column_previous = calculateColumn(parentIndex, row_previous)\n            const x_previous = calculateX(column_previous, numberOfColumns_previous)\n            const y_previous = calculateY(row_previous)\n\n            const selectivityKey = (1 << parentIndex) | (1 << i)\n            const selectivity = this._queryGraph.selectivities[selectivityKey]\n            this._drawEdge(x, y, x_previous, y_previous, ctx, selectivity)\n        }\n    }\n\n    // Hard-coded special case of a cyclic query\n    _drawMoerkotteQuery(ctx) {\n        const width = ctx.canvas.clientWidth\n        const height = ctx.canvas.clientHeight\n        const centerX = ctx.canvas.clientWidth/2\n        const centerY = ctx.canvas.clientHeight/2\n        const offset = margin + r_node\n\n        const x0 = centerX, y0 = offset\n        const x1 = offset, y1 = centerY\n        const x2 = centerX, y2 = centerY\n        const x3 = width - offset, y3 = centerY\n        const x4 = centerX, y4 = height - offset\n\n        this._drawNode(0, x0, y0, \"white\", ctx, this._queryGraph.relationCardinalities[0])\n        this._drawNode(1, x1, y1, \"white\", ctx, this._queryGraph.relationCardinalities[1])\n        this._drawNode(2, x2, y2, \"white\", ctx, this._queryGraph.relationCardinalities[2])\n        this._drawNode(3, x3, y3, \"white\", ctx, this._queryGraph.relationCardinalities[3])\n        this._drawNode(4, x4, y4, \"white\", ctx, this._queryGraph.relationCardinalities[4])\n        \n        this._drawEdge(x0, y0, x1, y1, ctx, this._queryGraph.selectivities[(1 << 0) | (1 << 1)])\n        this._drawEdge(x0, y0, x2, y2, ctx, this._queryGraph.selectivities[(1 << 0) | (1 << 2)])\n        this._drawEdge(x0, y0, x3, y3, ctx, this._queryGraph.selectivities[(1 << 0) | (1 << 3)])\n        this._drawEdge(x1, y1, x4, y4, ctx, this._queryGraph.selectivities[(1 << 1) | (1 << 4)])\n        this._drawEdge(x2, y2, x3, y3, ctx, this._queryGraph.selectivities[(1 << 2) | (1 << 3)])\n        this._drawEdge(x2, y2, x4, y4, ctx, this._queryGraph.selectivities[(1 << 2) | (1 << 4)])\n        this._drawEdge(x3, y3, x4, y4, ctx, this._queryGraph.selectivities[(1 << 3) | (1 << 4)])\n    }\n\n    _drawCycleQuery(numberOfNodes, ctx) {\n        for (let i = 0; i < numberOfNodes; i++) {\n            const cardinality = this._queryGraph.relationCardinalities[i]\n            const θ = 2 * π/numberOfNodes * i\n            \n            const r = ctx.canvas.clientWidth/2 - r_node - margin\n            const x = r * Math.cos(θ) + r + r_node + margin\n            const y = r * Math.sin(θ) + r + r_node + margin\n            this._drawNode(i, x, y, \"white\", ctx, cardinality)\n\n            const θ_next = 2 * π/numberOfNodes * (i + 1)\n            const x_next = r * Math.cos(θ_next) + r + r_node + margin\n            const y_next = r * Math.sin(θ_next) + r + r_node + margin\n\n            const selectivityKey = (1 << ((i+1) % numberOfNodes)) | (1 << i)\n            const selectivity = this._queryGraph.selectivities[selectivityKey]\n            this._drawEdge(x, y, x_next, y_next, ctx, selectivity)\n        }\n    }\n\n    // The number of nodes is unfortunately not\n    // sufficient to draw those. Might need more \n    // parameters.\n    _drawCyclicQuery(numberOfNodes, ctx) { }\n\n    _drawGridQuery(numberOfNodes, ctx) { }\n\n    _drawCliqueQuery(numberOfNodes, ctx) { }\n\n    _drawNode(i, x, y, color, ctx, label) {\n        ctx.fillStyle = this._nodeColors[i]\n        ctx.beginPath()\n        ctx.arc(x, y, r_node, 0, 2 * π)\n        ctx.fill()\n\n        ctx.font = \"20px sans-serif\"\n        ctx.fillStyle = \"rgb(30, 33, 39)\"\n        ctx.textBaseline = \"middle\"\n        ctx.textAlign = \"center\"\n        ctx.fillText(\"R\" + i, x, y)\n\n        const oldFillColor = ctx.fillColor\n        ctx.fillStyle = \"#555\"\n        ctx.font = \"12px sans-serif\"\n        const textWidth = ctx.measureText(label).width\n        ctx.roundRect(x - textWidth/2 - 3 + 10, y + 12.4, textWidth + 6, 18, 3).fill()\n        ctx.fillStyle = \"white\"\n        ctx.fillText(label, x + 10, y + 22)\n        ctx.fillStyle = oldFillColor\n    }\n\n    _drawEdge(x_source, y_source, x_dest, y_dest, ctx, weight = null) {\n        const compositeOperationBefore = ctx.globalCompositeOperation\n        ctx.globalCompositeOperation = 'destination-over'\n        ctx.beginPath()\n        ctx.moveTo(x_source, y_source)\n        ctx.lineTo(x_dest, y_dest)\n        ctx.stroke()\n        ctx.globalCompositeOperation = compositeOperationBefore\n        if (weight) {\n            const weightLabelCenterX = Math.min(x_dest, x_source) + Math.abs(x_dest - x_source)/2\n            const weightLabelCenterY = Math.min(y_dest, y_source) + Math.abs(y_dest - y_source)/2\n            const oldFillStyle = ctx.fillStyle\n\n            const labelText = [...weight.toString()].slice(0,7).join(\"\") // Limit to a maximum of 5 characters\n            const labelWidth = ctx.measureText(labelText).width + 10\n            const labelHeight = 18\n\n            ctx.fillStyle = \"white\"\n            ctx.fillRect(weightLabelCenterX - labelWidth/2, weightLabelCenterY - labelHeight/2, labelWidth, labelHeight)\n            ctx.fillStyle = oldFillStyle\n\n            ctx.font = \"14px sans-serif\"\n            ctx.fillStyle = \"#222\"\n            ctx.fillText(labelText, weightLabelCenterX, weightLabelCenterY)\n            ctx.moveTo(weightLabelCenterX, weightLabelCenterY)\n        }\n    }\n\n    _indexesOfSetBits(S) {\n        const reversedBitArray = [...S.toString(2)].reverse()\n        const concatIfOne = (result, c, i) => c === \"1\" ? result.concat(i) : result\n        return reversedBitArray.reduce(concatIfOne, [])\n    }\n}\n\nexport default QueryGraph","import React from \"react\"\nimport QueryGraph from \"../math/QueryGraph\"\nimport Hotkeys from 'react-hot-keys'\n\nclass AlgorithmCanvas extends React.Component {\n    state = {\n        graphState: [],\n        counters: []\n    }\n\n    constructor(props) {\n        super(props)\n        this.algorithmCanvasRef = React.createRef()\n    }\n\n    resize = () => {\n        const canvas = this.algorithmCanvasRef.current\n        const rect = canvas.parentNode.getBoundingClientRect()\n        canvas.width = rect.width\n        canvas.height = rect.width\n        this.redrawGraph()\n    }\n\n    componentDidMount() {\n        window.addEventListener('resize', this.resize)\n    }\n\n    componentWillUnmount() {\n        window.removeEventListener('resize', this.resize)\n    }\n\n    componentDidUpdate(prevProps) {\n        if (prevProps.graphState !== this.props.graphState) {\n            this.redrawGraph()\n        }\n    }\n\n    handleNextStep = step => {\n        const { steps, actions } = this.props\n        const nextStep = steps[step + 1]\n        actions.updateCurrentStepUUID(nextStep.uuid)\n        actions.increaseStep(1)\n        actions.updateGraphState(nextStep.graphState)\n        //window.scrollTo(0, document.body.scrollHeight);\n    }\n\n    handlePreviousStep = step => {\n        const { actions, steps } = this.props\n        const previousStep = steps[step - 1]\n        actions.updateCurrentStepUUID(previousStep.uuid)\n        actions.decreaseStep(1)\n        actions.updateGraphState(previousStep.graphState)\n        //window.scrollTo(0, document.body.scrollHeight);\n    }\n\n    redrawGraph() {\n        const graphState = this.props.graphState\n        const { queryGraph, settingGraphTypeValue } = this.props\n        if (!graphState.nodeColors) return\n        const canvas = this.algorithmCanvasRef.current\n        const ctx = canvas.getContext('2d')\n        const drawnQueryGraph = new QueryGraph(queryGraph)\n        drawnQueryGraph.draw(settingGraphTypeValue, graphState.nodeColors, ctx)\n    }\n\n    onKeyDown(keyName, e, handle) {\n        const { step, steps } = this.props\n        if (keyName === \"d\" && step < steps.length - 1) {\n            this.handleNextStep(step)\n        } else if (keyName === \"a\" && step > 0) {\n            this.handlePreviousStep(step)\n        }\n    }\n\n    render() {\n        const { step, steps } = this.props\n        const isFirstStep = step === 0\n        const isLastStep = step === steps.length - 1\n\n        return (\n            <>\n                <Hotkeys keyName=\"a,d\" onKeyDown={this.onKeyDown.bind(this)} allowRepeat={true} />\n                <div className=\"fixed\">\n                    <canvas ref={this.algorithmCanvasRef} width=\"500px\" height=\"500px\" style={{ width: \"100%\", height: \"50vw\" }}></canvas>\n                    <button onClick={() => this.handlePreviousStep(step)} disabled={isFirstStep}>Previous Step<span className=\"shortcut\">A</span></button>\n                    <button onClick={() => this.handleNextStep(step)} disabled={isLastStep}>Next Step<span className=\"shortcut\">D</span></button>\n                    <p>Step {step + 1} of {steps.length}</p>\n                </div>\n\n            </>\n        )\n    }\n}\n\nexport default AlgorithmCanvas\n","import { connect } from 'react-redux'\nimport { bindActionCreators } from 'redux'\nimport AlgorithmCanvas from '../components/AlgorithmCanvas'\n\nimport * as Actions from '../actions'\n\nconst mapStateToProps = state => {\n    return {\n        algorithm: state.algorithm,\n        settingNumberOfRelations: state.settingNumberOfRelations,\n        settingGraphTypeValue: state.settingGraphTypeValue,\n\n        configuration: state.configuration,\n        graphState: state.graphState,\n        queryGraph: state.queryGraph,\n        steps: state.steps,\n        step: state.step\n    }\n}\n\nconst mapDispatchToProps = dispatch => ({\n    actions: bindActionCreators(Actions, dispatch)\n})\n\nconst VisbleAlgorithmCanvas = connect(\n    mapStateToProps,\n    mapDispatchToProps\n)(AlgorithmCanvas)\n\nexport default VisbleAlgorithmCanvas","import React from \"react\"\nimport VisibleVariableTableEntry from \"../containers/VisibleVariableTableEntry\"\nclass VariableTableEntry extends React.Component {\n\n    render() {\n        const { parent, step, level, currentStepUUID } = this.props\n\n        const rBody = 40\n        const gBody = 44\n        const bBody = 52\n\n        const rParent = rBody - 8 * (level - 1)\n        const gParent = gBody - 8 * (level - 1)\n        const bParent = bBody - 8 * (level - 1)\n        const parentStyle = { backgroundColor: \"rgba(\" + rParent + \",\" + gParent + \",\" + bParent + \", 1)\" }\n\n        const r = rBody - 8 * level\n        const g = gBody - 8 * level\n        const b = bBody - 8 * level\n        const style = { backgroundColor: \"rgba(\" + r + \",\" + g + \",\" + b + \", 1)\" }\n\n        const borderLeft = 30 * level + \"px solid #282c34\"\n        const marginLeft = \"-\" + 30 * level + \"px\"\n        const fakeInsetStyle = { borderLeft: borderLeft, marginLeft: marginLeft }\n\n        // Routine\n        if (step.name) {\n            return (\n                <>\n                    <tr style={style}>\n                        <td style={{ fakeInsetStyle }}>\n                            {parent && parent.name === step.name && Array(level - 2).fill(\"→\").join(\"\") + \" \"}{step.name}\n                        </td>\n                    </tr>\n                    <tr style={style}>\n                        {\n                            step.observedRelations.map((r, i) => {\n                                const color = \"rgba(\" + r.color.R + \",\" + r.color.G + \",\" + r.color.B + \",\" + r.color.A + \")\"\n                                //const borderLeft = i === 0 ? 30 * level + \"px solid #282c34\" : \"0px\"\n                                return (\n                                    <td style={{ color: color/*, borderLeft: borderLeft, marginLeft: marginLeft*/ }} key={i}>\n                                        {r.identifier}\n                                    </td>\n                                )\n                            })}\n                    </tr>\n                    {\n                        step.steps && step.steps.map((s, i) =>\n                            <VisibleVariableTableEntry key={i} parent={step} step={s} level={level + 1} />\n                        )\n                    }\n                </>\n            )\n        }\n        else if (step.variables) {\n            return (\n                <tr style={parentStyle} className={step.uuid === currentStepUUID ? \"currentStep\" : \"\"}>\n                    {\n                        parent.observedRelations.map(r =>\n                            <td key={r.identifier}>\n                                {step.variables[r.identifier] ? step.variables[r.identifier].join(\",\") : \"\"}\n                            </td>\n                        )\n                    }\n                </tr>\n            )\n        }\n        else if (step.description) {\n            return (<tr><td>Result for {parent.name}: {step.description}</td></tr>)\n        }\n\n        // Should never happen if a valid JSON is produced\n        return (<div className=\"error\">There has been an error in the JSON output produced by the server.</div>)\n    }\n}\n\nexport default VariableTableEntry","import { connect } from 'react-redux'\nimport { bindActionCreators } from 'redux'\nimport * as Actions from '../actions'\nimport VariableTableEntry from '../components/VariableTableEntry'\n\nconst mapStateToProps = state => {\n    return {\n        currentStepUUID: state.stepUUID\n    }\n}\n\nconst mapDispatchToProps = dispatch => ({\n    actions: bindActionCreators(Actions, dispatch)\n})\n\nconst VisbleVariableTableEntry = connect(\n    mapStateToProps,\n    mapDispatchToProps\n)(VariableTableEntry)\n\nexport default VisbleVariableTableEntry\n","import React from \"react\"\nimport VisibleVariableTableEntry from '../containers/VisibleVariableTableEntry'\nclass VariableTable extends React.Component {\n\n    render() {\n        const { routines } = this.props\n\n        return (\n            <div>\n                <table>\n                    <thead>\n                        <tr>\n                            <td></td>\n                        </tr>\n                    </thead>\n                    <tbody>\n                        {\n                            routines.map((routine, i) => \n                                <VisibleVariableTableEntry key={i} step={routine} level={0} />\n                            )\n                        }\n                    </tbody>\n                </table>\n            </div>\n        )\n    }\n}\n\nexport default VariableTable","import { connect } from 'react-redux'\nimport { bindActionCreators } from 'redux'\nimport VariableTable from '../components/VariableTable'\n\nimport * as Actions from '../actions'\n\nconst mapStateToProps = state => {\n    return {\n        routines: state.routines,\n        steps: state.steps,\n        step: state.step,\n        currentStepUUID: state.stepUUID,\n        configuration: state.configuration,\n        algorithm: state.algorithm\n    }\n}\n\nconst mapDispatchToProps = dispatch => ({\n    actions: bindActionCreators(Actions, dispatch)\n})\n\nconst VisbleVariableTable = connect(\n    mapStateToProps,\n    mapDispatchToProps\n)(VariableTable)\n\nexport default VisbleVariableTable\n","import React from \"react\"\nimport VisibleJoinProblemSettings from \"./containers/VisibleJoinProblemSettings\"\nimport VisibleAlgorithmCanvas from \"./containers/VisibleAlgorithmCanvas\"\nimport VisibleVariableTable from \"./containers/VisibleVariableTable\"\n\nclass AlgorithmVisualization extends React.Component {\n    render() {\n        return (\n            <>\n                <VisibleJoinProblemSettings />\n                <main className=\"flexibleColumn half\">\n                    <VisibleAlgorithmCanvas />\n                    <VisibleVariableTable />\n                </main>\n            </>\n        )\n    }\n}\n\nexport default AlgorithmVisualization\n","import React from 'react'\nimport './styles/App.css'\n\nimport AlgorithmVisualization from './AlgorithmVisualization'\n\nfunction App() {\n    return (\n        <div className=\"App\">\n            <AlgorithmVisualization />\n        </div>\n    );\n}\n\nexport default App;\n","import {\n    CHANGE_QUERY_GRAPH_TYPE,\n    CHANGE_QUERY_NUMBER_RELATIONS,\n    CHANGE_QUERY_GRAPH    \n} from '../constants/ActionTypes'\n\nconst QUERY_GRAPH_DEFAULT = {\n    problemID: 0,\n    problemType: \"chain\",\n    problemTypeFormatted: \"Chain\",\n    neighbors: {\n        0: 1,\n        1: 0\n    },\n    numberOfRelations: 2,\n    relations: [\n        {\n            cardinality: 135.1106833796348,\n            name: \"<unknown>\",\n            problemID: 0,\n            relationID: 0\n        },\n        {\n            cardinality: 7.70954008593561,\n            name: \"<unknown>\",\n            problemID: 0,\n            relationID: 1\n        }\n    ],\n    selectivities: {\n        \"0,1\": 0.12570116771021658\n    }\n}\n\nexport function queryGraph(state = QUERY_GRAPH_DEFAULT, action) {\n    switch(action.type) {\n        case CHANGE_QUERY_GRAPH:\n            return action.queryGraph\n        default:\n            return state\n    }\n}\n\nexport function settingGraphTypeValue(state = \"moerkotte\", action) {\n    switch (action.type) {\n        case CHANGE_QUERY_GRAPH_TYPE:\n            return action.graphType\n        default:\n            return state\n    }\n}\n\nexport function settingNumberOfRelations(state = 5, action) {\n    switch (action.type) {\n        case CHANGE_QUERY_NUMBER_RELATIONS:\n            return action.numberOfRelations\n        default:\n            return state\n    }\n}","import {\n    UPDATE_CONFIGURATION\n} from '../constants/ActionTypes'\n\nconst DEFAULT_CONFIGURATION = {\n    observedRelations: []\n}\n\nexport function configuration(state = DEFAULT_CONFIGURATION, action) {\n    switch (action.type) {\n        case UPDATE_CONFIGURATION:\n            return action.configuration\n        default:\n            return state\n    }\n}\n","import { combineReducers } from 'redux'\nimport { algorithms, algorithm } from './algorithm'\nimport { queryGraph, settingGraphTypeValue, settingNumberOfRelations } from './queryGraph'\nimport { configuration } from './configuration'\nimport { routines } from './routines'\nimport { steps } from './steps'\nimport { step, stepUUID } from './step'\nimport { graphState } from './graphState'\n\nconst appReducer = combineReducers({\n    queryGraph,\n    settingGraphTypeValue,\n    settingNumberOfRelations,\n    graphState,\n    algorithms,\n    algorithm,\n    routines,\n    steps,\n    step,\n    stepUUID,\n    configuration\n})\n\nconst rootReducer = (state, action) => {\n    if (action.type === 'CLEAR_STATE') {\n        state = undefined\n    }\n    return appReducer(state, action)\n}\n\nexport default rootReducer","import {\n    UPDATE_GRAPH_STATE\n} from '../constants/ActionTypes'\n\nexport function graphState(state = {}, action) {\n    switch (action.type) {\n        case UPDATE_GRAPH_STATE:\n            return action.graphState\n        default:\n            return state\n    }\n}\n","import {\n    CHANGE_ALGORITHM,\n    UPDATE_ALGORITHMS\n} from '../constants/ActionTypes'\n\nexport function algorithms(state = [], action) {\n    switch (action.type) {\n        case UPDATE_ALGORITHMS:\n            return action.algorithms\n        default:\n            return state\n    }\n}\n\nexport function algorithm(state = {}, action) {\n    switch (action.type) {\n        case CHANGE_ALGORITHM:\n            return action.algorithm\n        default:\n            return state\n    }\n}\n","import {\n    UPDATE_ROUTINES\n} from '../constants/ActionTypes'\n\nexport function routines(state = [], action) {\n    switch (action.type) {\n        case UPDATE_ROUTINES:\n            return action.routines\n        default:\n            return state\n    }\n}\n","import {\n    UPDATE_STEPS\n} from '../constants/ActionTypes'\n\nexport function steps(state = [], action) {\n    switch (action.type) {\n        case UPDATE_STEPS:\n            return action.steps\n        default:\n            return state\n    }\n}\n","import {\n    INCREASE_STEP,\n    DECREASE_STEP,\n    RESET_STEPS,\n    UPDATE_STEP_UUID\n} from '../constants/ActionTypes'\n\nexport function step(state = 0, action) {\n    switch (action.type) {\n        case INCREASE_STEP:\n            return state + action.increase\n        case DECREASE_STEP:\n            return state - action.decrease\n        case RESET_STEPS:\n            return 0\n        default:\n            return state\n    }\n}\n\nexport function stepUUID(state = \"\", action) {\n    switch(action.type) {\n        case UPDATE_STEP_UUID:\n            return action.uuid\n        default:\n            return state\n    }\n}","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport { createStore, applyMiddleware, compose } from 'redux'\nimport { Provider } from 'react-redux'\nimport thunk from 'redux-thunk'\nimport rootReducer from './reducers'\nimport * as serviceWorker from './serviceWorker'\nimport { persistStore, persistReducer } from 'redux-persist'\nimport storage from 'redux-persist/lib/storage' // defaults to localStorage for web\nimport { PersistGate } from 'redux-persist/integration/react'\n\nconst persistConfig = {\n    key: 'root',\n    storage\n}\nconst persistedReducer = persistReducer(persistConfig, rootReducer)\n\nexport const store = createStore(\n    persistedReducer,\n    applyMiddleware(thunk)//,\n    // Change to this if you want to use the Redux Devtools extension in Chrome.\n    /*compose(\n        applyMiddleware(thunk),\n        window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()\n    )*/\n)\n\nconst persistor = persistStore(store)\n\nReactDOM.render(\n    <Provider store={store}>\n          <PersistGate loading={null} persistor={persistor}>\n            <App />\n        </PersistGate>\n    </Provider>,\n    document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}