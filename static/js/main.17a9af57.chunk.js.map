{"version":3,"sources":["constants/AlgorithmConstants.js","components/JoinProblemSettings.js","actions/index.js","constants/ActionTypes.js","containers/VisibleJoinProblemSettings.js","math/QueryGraph.js","components/AlgorithmCanvas.js","containers/VisibleAlgorithmCanvas.js","components/VariableTable.js","containers/VisibleVariableTable.js","AlgorithmVisualization.js","App.js","reducers/queryGraph.js","reducers/configuration.js","reducers/index.js","reducers/variables.js","reducers/algorithm.js","reducers/steps.js","reducers/step.js","serviceWorker.js","index.js"],"names":["ALGORITHMS","value","label","QUERY_GRAPH_OPTIONS","marksStatic","3","4","5","6","7","8","9","10","JoinProblemSettings","handleNumberOfRelationsChange","numberOfRelations","props","actions","changeQueryNumberOfRelations","handleGraphTypeChange","graphType","graphTypeIndex","findIndex","type","changeQueryGraphType","this","className","marks","handleStyle","background","border","height","width","marginTop","trackStyle","borderRadius","railStyle","dotStyle","transform","style","dots","onChange","min","defaultValue","max","name","placeholder","options","React","Component","changeAlgorithm","algorithmIndex","addVariableRow","variableRow","popVariableRow","updateSteps","steps","updateConfiguration","configuration","increaseStep","increase","decreaseStep","decrease","VisbleJoinProblemSettings","connect","state","queryGraph","dispatch","bindActionCreators","Actions","π","Math","PI","QueryGraph","numberOfNodes","_nodeColors","_numberOfNodes","Array","fill","nodeColors","ctx","console","log","forEach","nodeColor","nodeIndex","color","R","G","B","dpr","window","devicePixelRatio","rect","canvas","getBoundingClientRect","clearRect","clientWidth","clientHeight","scale","strokeStyle","fillStyle","_drawChainQuery","_drawStarQuery","_drawTreeQuery","_drawCyclicQuery","_drawCycleQuery","_drawGridQuery","_drawCliqueQuery","_drawMoerkotteQuery","i","drawableWidth","margin","r_node","x","_drawNode","x_previous","_drawLine","x_center","y_center","θ","r","cos","y","sin","drawableHeight","y_offset","floor","log2","calculateRow","index","row","calculateNumberOfColumnsInRow","numberOfColumnsInRow","calculateColumn","calculateX","column","calculateY","parentIndex","row_previous","numberOfColumns_previous","y_previous","centerX","centerY","x0","y1","x2","y2","x3","y3","x4","y4","θ_previous","beginPath","arc","font","textBaseline","textAlign","fillText","x_source","y_source","x_dest","y_dest","compositeOperationBefore","globalCompositeOperation","moveTo","lineTo","stroke","AlgorithmCanvas","initialGraphState","graphState","counters","diffs","handleAlgorithmChange","algorithm","setState","updateAlgorithm","handleNextStep","step","diff","Object","assign","handlePreviousStep","newGraphState","algorithmCanvasRef","createRef","redrawGraph","fetch","ENDPOINT","response","json","JSON","parse","stringify","begin","current","getContext","draw","onClick","disabled","length","ref","VisbleAlgorithmCanvas","VariableTable","slice","keys","observedVariables","map","key","j","variables","join","VisbleVariableTable","AlgorithmVisualization","display","flex","justifyContent","marginRight","VisibleJoinProblemSettings","VisibleAlgorithmCanvas","VisibleVariableTable","App","QUERY_GRAPH_DEFAULT","DEFAULT_CONFIGURATION","appReducer","combineReducers","action","rootReducer","undefined","Boolean","location","hostname","match","store","createStore","compose","applyMiddleware","thunk","__REDUX_DEVTOOLS_EXTENSION__","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.17a9af57.chunk.js","sourcesContent":["export const ALGORITHMS = [\n    { value: \"dpccp\", label: \"DPccp\" },\n    { value: \"art\", label: \"Adaptive Radix Tree\" }\n]\n\nexport const QUERY_GRAPH_OPTIONS = [\n    { value: \"chain\", label: \"Chain\" },\n    { value: \"star\", label: \"Star\" },\n    { value: \"tree\", label: \"Tree\" },\n    //{ value: \"cyclic\", label: \"Cyclic\" },\n    { value: \"cycle\", label: \"Cycle\" },\n    //{ value: \"grid\", label: \"Grid\" },\n    //{ value: \"clique\", label: \"Clique\" },\n    { value: \"moerkotte\", label: \"Moerkotte QueryCompiler 2018\" },\n]","import React from \"react\"\nimport Select from \"react-select\"\nimport Slider from 'rc-slider';\nimport { QUERY_GRAPH_OPTIONS } from \"../constants/AlgorithmConstants\"\nimport '../styles/App.css'\nimport \"rc-slider/assets/index.css\";\n\n// Create an array with values from 3 to 8 and store them in an object\n// For some reason this doesn't work, despite giving the same result as ``marksStatic``\n/*const marks = [...Array(6).keys()]\n              .map(x => x + 3)\n              .reduce((object, number) => Object.defineProperty(object, number, { value: number.toString() }), {})*/\n\n// Fallback for the above code\nconst marksStatic = {\n    3: \"3\",\n    4: \"4\",\n    5: \"5\",\n    6: \"6\",\n    7: \"7\",\n    8: \"8\",\n    9: \"9\",\n   10: \"10\",\n}\n\nclass JoinProblemSettings extends React.Component {\n    \n    handleNumberOfRelationsChange = numberOfRelations => {\n        const actions = this.props.actions\n        actions.changeQueryNumberOfRelations(numberOfRelations)\n    }\n\n    handleGraphTypeChange = graphType => {\n        const actions = this.props.actions\n        const graphTypeIndex = QUERY_GRAPH_OPTIONS.findIndex(type => type.value === graphType.value)\n        actions.changeQueryGraphType(graphTypeIndex)\n    }\n\n    render() {\n        const { graphTypeIndex } = this.props\n        const graphType = QUERY_GRAPH_OPTIONS[graphTypeIndex]\n        \n        return (\n            <div>\n                <h3>Graph</h3>\n                <div>\n                    <h5>Number of relations</h5>\n                    <Slider className=\"slider\"\n                                marks={marksStatic}\n                          handleStyle={{background:\"white\", border: 0, height:\"26px\",width:\"26px\",marginTop:\"-9px\"}}\n                           trackStyle={{background:\"white\", height: \"4px\", borderRadius:\"0px\"}} \n                            railStyle={{background:\"white\", height: \"4px\", borderRadius:\"0px\"}}\n                             dotStyle={{height:\"20px\", transform:\"translate(2px, 6px)\", border:\"none\", borderRadius:\"0px\",width:\"3px\"}}\n                                style={{width:\"100%\"}}    \n                                 dots={true}\n                             onChange={this.handleNumberOfRelationsChange}\n                                  min={3}\n                         defaultValue={5}\n                                  max={10} />\n                    <h5>Graph Type</h5>\n                    <Select className=\"select\" \n                                 name=\"color\" \n                                style={{width:\"100%\"}}\n                         defaultValue={QUERY_GRAPH_OPTIONS[4]} \n                          placeholder=\"Query Graph\" \n                                value={graphType} \n                             onChange={this.handleGraphTypeChange} \n                              options={QUERY_GRAPH_OPTIONS} />\n                    {graphType.value === \"tree\" && <div className=\"info\">Only complete binary trees are supported.</div>}\n                </div>\n            </div>\n        )\n    }\n}\n\nexport default JoinProblemSettings\n","import * as types from '../constants/ActionTypes'\n\n// Query Graph\nexport const changeQueryNumberOfRelations = numberOfRelations => ({ type: types.CHANGE_QUERY_NUMBER_RELATIONS, numberOfRelations })\nexport const changeQueryGraphType = graphTypeIndex => ({ type: types.CHANGE_QUERY_GRAPH_TYPE, graphTypeIndex })\n\n// Algorithm\nexport const changeAlgorithm = algorithmIndex => ({ type: types.CHANGE_ALGORITHM, algorithmIndex })\n\n// Variables\nexport const addVariableRow = variableRow => ({ type: types.ADD_VARIABLE_ROW, variableRow })\nexport const popVariableRow = () => ({ type: types.POP_VARIABLE_ROW })\n\n// Steps\nexport const updateSteps = steps => ({ type: types.UPDATE_STEPS, steps })\n\n// Update Configuration\nexport const updateConfiguration = configuration => ({ type: types.UPDATE_CONFIGURATION, configuration })\n\n// Step\nexport const increaseStep = increase => ({ type: types.INCREASE_STEP, increase })\nexport const decreaseStep = decrease => ({ type: types.DECREASE_STEP, decrease })","// Query Graph\nexport const CHANGE_QUERY_GRAPH_TYPE = 'CHANGE_QUERY_GRAPH_TYPE'\nexport const CHANGE_QUERY_NUMBER_RELATIONS = 'CHANGE_QUERY_NUMBER_RELATIONS'\n\n// Algorithm\nexport const CHANGE_ALGORITHM = 'CHANGE_ALGORITHM'\n\n// Variables\nexport const ADD_VARIABLE_ROW = 'ADD_VARIABLE_ROW'\nexport const POP_VARIABLE_ROW = 'POP_VARIABLE_ROW'\n\nexport const UPDATE_STEPS = 'UPDATE_STEPS'\nexport const UPDATE_CONFIGURATION = 'UPDATE_CONFIGURATION'\n\nexport const INCREASE_STEP = 'INCREASE_STEP'\nexport const DECREASE_STEP = 'DECREASE_STEP'","import { connect } from 'react-redux'\nimport { bindActionCreators } from 'redux'\nimport JoinProblemSettings from '../components/JoinProblemSettings'\n\nimport * as Actions from '../actions'\n\nconst mapStateToProps = state => {\n    return {\n        numberOfRelations: state.queryGraph.numberOfRelations,\n        graphTypeIndex: state.queryGraph.graphTypeIndex\n    }\n}\n\nconst mapDispatchToProps = dispatch => ({\n    actions: bindActionCreators(Actions, dispatch)\n})\n\nconst VisbleJoinProblemSettings = connect(\n    mapStateToProps,\n    mapDispatchToProps\n)(JoinProblemSettings)\n\nexport default VisbleJoinProblemSettings","const π = Math.PI\nconst r_node = 20\nconst margin = 12\nclass QueryGraph {\n\n    _nodeColors = []\n    _numberOfNodes = 0\n\n    constructor(numberOfNodes) {\n        this._numberOfNodes = numberOfNodes\n        this._nodeColors = Array(numberOfNodes).fill(\"white\")  \n    }\n    \n    draw(type, nodeColors, ctx) {\n        console.log(nodeColors);\n\n        nodeColors.forEach(nodeColor => {\n            this._nodeColors[nodeColor.nodeIndex] = \"rgb(\" + nodeColor.color.R + \",\" + nodeColor.color.G + \",\" + nodeColor.color.B + \")\"\n        })\n\n        const dpr = window.devicePixelRatio || 1\n        const rect = ctx.canvas.getBoundingClientRect()\n        ctx.canvas.width = rect.width * dpr\n        ctx.canvas.height = rect.height * dpr\n        ctx.clearRect(0, 0, ctx.canvas.clientWidth, ctx.canvas.clientHeight)\n        ctx.scale(dpr, dpr)\n\n        ctx.strokeStyle = 'rgb(250, 250, 250)'\n        ctx.fillStyle = 'rgb(250, 250, 250)'\n\n        const numberOfNodes = this._numberOfNodes\n        switch(type) {\n            case \"chain\":\n                this._drawChainQuery(numberOfNodes, ctx)\n                break\n            case \"star\":\n                this._drawStarQuery(numberOfNodes, ctx)\n                break\n            case \"tree\":\n                this._drawTreeQuery(numberOfNodes, ctx)\n                break\n            case \"cyclic\":\n                this._drawCyclicQuery(numberOfNodes, ctx)\n                break\n            case \"cycle\":\n                this._drawCycleQuery(numberOfNodes, ctx)\n                break    \n            case \"grid\":\n                this._drawGridQuery(numberOfNodes, ctx)\n                break\n            case \"clique\":\n                this._drawCliqueQuery(numberOfNodes, ctx)\n                break\n            case \"moerkotte\":\n                this._drawMoerkotteQuery(ctx)\n            default:\n                break\n          } \n    }\n\n    _drawChainQuery(numberOfNodes, ctx) {\n        for (let i = 0; i < numberOfNodes; i++) {\n            const drawableWidth = ctx.canvas.clientWidth - margin * 2 - r_node * 2\n            const x = margin + r_node + i * drawableWidth/(numberOfNodes - 1)\n            const y = 200\n            this._drawNode(i, x, y, \"white\", ctx)\n\n            // Connect the lines\n            if (i !== 0) {\n                const x_previous = margin + r_node + (i - 1) * drawableWidth/(numberOfNodes - 1)\n                const y_previous = y\n                this._drawLine(x, y, x_previous, y_previous, ctx)\n            }\n        }\n    }\n\n    _drawStarQuery(numberOfNodes, ctx) {\n        for (let i = 0; i < numberOfNodes; i++) {\n            const x_center = ctx.canvas.clientWidth/2\n            const y_center = ctx.canvas.clientHeight/2                \n\n            if (i === 0) { // Center node\n                this._drawNode(i, x_center, y_center, \"white\", ctx)\n                continue\n            }\n            const θ = 2 * π/(numberOfNodes - 1) * i\n            const r = ctx.canvas.clientWidth/2 - r_node - margin\n            const x = r * Math.cos(θ) + r + r_node + margin\n            const y = r * Math.sin(θ) + r + r_node + margin\n            this._drawLine(x, y, x_center, y_center, ctx)\n            this._drawNode(i, x, y, \"white\", ctx)\n        }\n    }\n\n    _drawTreeQuery(numberOfNodes, ctx) {\n        const drawableWidth = ctx.canvas.clientWidth - margin * 2 - r_node * 2\n        const drawableHeight = ctx.canvas.clientWidth - margin * 2 - r_node * 2\n        const x_center = ctx.canvas.clientWidth/2\n        const y_offset = drawableHeight/Math.floor(Math.log2(numberOfNodes))\n\n        for (let i = 0; i < numberOfNodes; i++) {\n            if (i === 0) { // Root node\n                this._drawNode(i, x_center, margin + r_node, \"white\", ctx)\n                continue\n            }\n            const calculateRow = index => Math.floor(Math.log2(index + 1))\n            const row = calculateRow(i)\n            const calculateNumberOfColumnsInRow = row => 2 ** row\n            const numberOfColumnsInRow = calculateNumberOfColumnsInRow(row)\n\n            const calculateColumn = (index, row) => index - 2 ** row + 1\n            const calculateX = (column, numberOfColumnsInRow) => (column + 0.5) * drawableWidth/numberOfColumnsInRow + margin + r_node\n            const calculateY = row => r_node + margin + y_offset * row\n            const column = calculateColumn(i, row)\n            const x = calculateX(column, numberOfColumnsInRow)\n            const y = calculateY(row)\n            this._drawNode(i, x, y, \"white\", ctx)\n\n            const parentIndex = Math.floor((i - 1)/2)\n            const row_previous = calculateRow(parentIndex)\n            const numberOfColumns_previous = calculateNumberOfColumnsInRow(row_previous)\n            const column_previous = calculateColumn(parentIndex, row_previous)\n            const x_previous = calculateX(column_previous, numberOfColumns_previous)\n            const y_previous = calculateY(row_previous)\n            this._drawLine(x, y, x_previous, y_previous, ctx)\n        }\n    }\n\n    // Hard-coded special case of a cyclic query\n    _drawMoerkotteQuery(ctx) {\n        const width = ctx.canvas.clientWidth\n        const height = ctx.canvas.clientHeight\n        const centerX = ctx.canvas.clientWidth/2\n        const centerY = ctx.canvas.clientHeight/2\n        const offset = margin + r_node\n\n        const x0 = centerX, y0 = offset\n        const x1 = offset, y1 = centerY\n        const x2 = centerX, y2 = centerY\n        const x3 = width - offset, y3 = centerY\n        const x4 = centerX, y4 = height - offset\n\n        this._drawNode(0, x0, y0, \"white\", ctx)\n        this._drawNode(1, x1, y1, \"white\", ctx)\n        this._drawNode(2, x2, y2, \"white\", ctx)\n        this._drawNode(3, x3, y3, \"white\", ctx)\n        this._drawNode(4, x4, y4, \"white\", ctx)\n        \n        this._drawLine(x0, y0, x1, y1, ctx)\n        this._drawLine(x0, y0, x2, y2, ctx)\n        this._drawLine(x0, y0, x3, y3, ctx)\n        this._drawLine(x1, y1, x4, y4, ctx)\n        this._drawLine(x2, y2, x3, y3, ctx)\n        this._drawLine(x2, y2, x4, y4, ctx)\n        this._drawLine(x3, y3, x4, y4, ctx)\n    }\n\n    _drawCyclicQuery(numberOfNodes, ctx) {\n\n    }\n\n    _drawCycleQuery(numberOfNodes, ctx) {\n        for (let i = 0; i < numberOfNodes; i++) {\n            const θ = 2 * π/numberOfNodes * i\n            \n            const r = ctx.canvas.clientWidth/2 - r_node - margin\n            const x = r * Math.cos(θ) + r + r_node + margin\n            const y = r * Math.sin(θ) + r + r_node + margin\n            this._drawNode(i, x, y, \"white\", ctx)\n\n            const θ_previous = 2 * π/numberOfNodes * (i - 1)\n            const x_previous = r * Math.cos(θ_previous) + r + r_node + margin\n            const y_previous = r * Math.sin(θ_previous) + r + r_node + margin\n            this._drawLine(x, y, x_previous, y_previous, ctx)\n        }\n    }\n\n    _drawGridQuery(numberOfNodes, ctx) {\n\n    }\n\n    _drawCliqueQuery(numberOfNodes, ctx) {\n\n    }\n\n    _drawNode(i, x, y, color, ctx) {\n        ctx.fillStyle = this._nodeColors[i]\n        ctx.beginPath()\n        ctx.arc(x, y, r_node, 0, 2 * π)\n        ctx.fill()\n\n        ctx.font = \"20px sans-serif\";\n        ctx.fillStyle = \"rgb(30, 33, 39)\"\n        ctx.textBaseline = \"middle\"\n        ctx.textAlign = \"center\"\n        ctx.fillText(\"R\" + i, x, y)\n    }\n\n    _drawLine(x_source, y_source, x_dest, y_dest, ctx) {\n        const compositeOperationBefore = ctx.globalCompositeOperation\n        ctx.globalCompositeOperation = 'destination-over'\n        ctx.beginPath()\n        ctx.moveTo(x_source, y_source)\n        ctx.lineTo(x_dest, y_dest)\n        ctx.stroke()\n        ctx.globalCompositeOperation = compositeOperationBefore\n    }\n}\n\nexport default QueryGraph","import React from \"react\"\nimport Select from \"react-select\"\nimport QueryGraph from \"../math/QueryGraph\"\nimport { ALGORITHMS, QUERY_GRAPH_OPTIONS } from \"../constants/AlgorithmConstants\"\n\nconst ENDPOINT = \"https://dbs-visualization.ew.r.appspot.com/api\"\n\nclass AlgorithmCanvas extends React.Component {\n    state = {\n        initialGraphState: [],\n        graphState: [],\n        counters: [],\n        diffs: []\n    }\n\n    constructor(props) {\n        super(props)\n        this.algorithmCanvasRef = React.createRef()\n    }\n\n    componentDidUpdate() {\n        this.redrawGraph()\n    }\n\n    async componentDidMount() {\n        this.updateAlgorithm()\n    }\n\n    async updateAlgorithm() {\n        const { actions, numberOfRelations, graphTypeIndex } = this.props\n        const graphType = QUERY_GRAPH_OPTIONS[graphTypeIndex]\n        const response = await fetch(ENDPOINT + \"/algorithm/\" + this.props.algorithm.value\n                                              + \"/relations/\" + numberOfRelations\n                                              + \"/graphType/\" + graphType.value)\n        const json = await response.json()\n        console.log(\"Res\")\n        console.log(response)\n        console.log(json)\n\n        actions.updateConfiguration(json.configuration)\n        actions.updateSteps(json.diffs)\n\n        this.setState({\n            initialGraphState: JSON.parse(JSON.stringify(json.begin.graphState)),\n            graphState: json.diffs[0].graphState,\n            counters: json.begin.counters,\n            diffs: json.diffs,\n            step: 0\n        })\n    }\n\n    handleAlgorithmChange = algorithm => {\n        this.setState({ \n            algorithm: algorithm\n        }, () => {\n            this.updateAlgorithm()\n        })     \n    }\n\n    handleNextStep = step => {\n        const { graphState, diffs } = this.state\n        const diff = diffs[step + 1]\n\n        console.log(\"Next step\");\n        console.log(diff);\n        console.log(this.state)\n\n        const { actions } = this.props\n        actions.increaseStep(1)\n\n        this.setState({\n            graphState: Object.assign(graphState, diff.graphState)\n        })\n    } \n\n    handlePreviousStep = step => {\n        const { graphState, diffs } = this.state\n        const diff = diffs[step - 1]\n\n        //let newGraphState\n        /*if (step === 1) {\n            newGraphState = JSON.parse(JSON.stringify(this.state.initialGraphState))\n        } else {\n            \n        }*/\n        const newGraphState = Object.assign(graphState, diff.graphState)\n\n        const { actions } = this.props\n        actions.decreaseStep(1)\n\n        this.setState({\n            graphState: newGraphState\n        })\n    }\n\n    redrawGraph() {        \n        const canvas = this.algorithmCanvasRef.current\n        const ctx = canvas.getContext('2d')\n        const { numberOfRelations, graphTypeIndex } = this.props\n        const queryGraph = new QueryGraph(numberOfRelations)\n        const graphType = QUERY_GRAPH_OPTIONS[graphTypeIndex]\n        const { graphState } = this.state\n\n        queryGraph.draw(graphType.value, graphState.nodeColors, ctx)\n    }\n\n    render() {\n        const { algorithm, diffs } = this.state\n        const { step } = this.props\n\n        return (\n            <div>\n                <h3>Algorithm</h3>\n                <Select name=\"color\" \n                   className=\"select\" \n                defaultValue={ALGORITHMS[0]} \n                 placeholder=\"Query Graph\" \n                       value={algorithm}\n                    onChange={this.handleAlgorithmChange} \n                     options={ALGORITHMS} />\n                <button onClick={() => this.handlePreviousStep(step)} disabled={step === 0}>Previous Step</button>\n                <button onClick={() => this.handleNextStep(step)} disabled={step === diffs.length - 1}>Next Step</button>\n                <p>Step {step + 1} of {diffs.length}</p>\n                <canvas ref={this.algorithmCanvasRef} width=\"400px\" height=\"400px\" style={{width:\"400px\", height:\"400px\"}}></canvas>\n            </div>\n        )\n    }\n}\n\nexport default AlgorithmCanvas\n","import { connect } from 'react-redux'\nimport { bindActionCreators } from 'redux'\nimport { ALGORITHMS } from '../constants/AlgorithmConstants'\nimport AlgorithmCanvas from '../components/AlgorithmCanvas'\n\nimport * as Actions from '../actions'\n\nconst mapStateToProps = state => {\n    return {\n        algorithm: ALGORITHMS[state.algorithmIndex],\n        numberOfRelations: state.queryGraph.numberOfRelations,\n        graphTypeIndex: state.queryGraph.graphTypeIndex,\n        step: state.step\n    }\n}\n\nconst mapDispatchToProps = dispatch => ({\n    actions: bindActionCreators(Actions, dispatch)\n})\n\nconst VisbleAlgorithmCanvas = connect(\n    mapStateToProps,\n    mapDispatchToProps\n)(AlgorithmCanvas)\n\nexport default VisbleAlgorithmCanvas","import React from \"react\"\n\nclass VariableTable extends React.Component {\n    \n    render() {\n        const { actions, configuration, step } = this.props\n        const steps = this.props.steps.slice(0, step)\n        console.log(\"OOYOF\")\n        console.log(actions);\n        console.log(steps);\n        console.log(steps[0])\n        console.log(configuration)\n        const keys = configuration.observedVariables\n\n        return (\n            <table>\n                <thead>\n                    <tr>\n                        {keys.map(key => <th key={key}>{key}</th>)}\n                    </tr>\n                </thead>\n                <tbody>\n                    {\n                    steps.map((step, i) => \n                        <tr>\n                            {\n                            keys.map((key, j) => \n                            <td key={key + i + j}>\n                                {'{'}{step.variables[key]?.join(\", \")}{'}'}\n                            </td>)\n                            }\n                        </tr>)\n                    }\n                </tbody>\n            </table>\n        )\n    }\n}\n\nexport default VariableTable","import { connect } from 'react-redux'\nimport { bindActionCreators } from 'redux'\nimport VariableTable from '../components/VariableTable'\n\nimport * as Actions from '../actions'\n\nconst mapStateToProps = state => {\n    return {\n        steps: state.steps,\n        step: state.step,\n        configuration: state.configuration\n    }\n}\n\nconst mapDispatchToProps = dispatch => ({\n    actions: bindActionCreators(Actions, dispatch)\n})\n\nconst VisbleVariableTable = connect(\n    mapStateToProps,\n    mapDispatchToProps\n)(VariableTable)\n\n\n\nexport default VisbleVariableTable","import React from \"react\"\nimport VisibleJoinProblemSettings from \"./containers/VisibleJoinProblemSettings\"\nimport VisibleAlgorithmCanvas from \"./containers/VisibleAlgorithmCanvas\"\nimport VisibleVariableTable from \"./containers/VisibleVariableTable\"\n\nclass AlgorithmVisualization extends React.Component {\n    render() {\n        return (\n            <div style={{display:\"flex\"}}>\n                <div style={{width: \"400px\", flex:\"0 0 400px\", justifyContent:\"space-between\", marginRight:\"80px\"}}>\n                    <VisibleJoinProblemSettings />\n                    <VisibleAlgorithmCanvas />\n                </div>\n                <div style={{width: \"1 1 100%\"}}>\n                    <VisibleVariableTable />\n                </div>\n            </div>\n        )\n    }\n}\n\nexport default AlgorithmVisualization\n","import React from 'react'\nimport './styles/App.css'\n\nimport AlgorithmVisualization from './AlgorithmVisualization'\n//import ART from './ART'\n\nfunction App() {\n    return (\n        <div className=\"App\">\n            <header className=\"App-header\">\n                <h1>Database Algorithms Visualization</h1>\n            </header>\n            <AlgorithmVisualization />\n        </div>\n    );\n}\n\nexport default App;\n","import {\n    CHANGE_QUERY_GRAPH_TYPE,\n    CHANGE_QUERY_NUMBER_RELATIONS\n    \n} from '../constants/ActionTypes'\n\nconst QUERY_GRAPH_DEFAULT = {\n    numberOfRelations: 5,\n    graphTypeIndex: 4\n}\n\nexport function queryGraph(state = QUERY_GRAPH_DEFAULT, action) {\n    console.log(state);\n    switch (action.type) {\n        case CHANGE_QUERY_GRAPH_TYPE:\n            return {...state, graphTypeIndex: action.graphTypeIndex}\n        case CHANGE_QUERY_NUMBER_RELATIONS:\n            return {...state, numberOfRelations: action.numberOfRelations}\n        default:\n            return state\n    }\n}\n","import {\n    UPDATE_CONFIGURATION\n} from '../constants/ActionTypes'\n\nconst DEFAULT_CONFIGURATION = {\n    observedVariables: []\n}\n\nexport function configuration(state = DEFAULT_CONFIGURATION, action) {\n    switch (action.type) {\n        case UPDATE_CONFIGURATION:\n            return action.configuration\n        default:\n            return state\n    }\n}\n","import { combineReducers } from 'redux'\nimport { algorithmIndex } from './algorithm'\nimport { queryGraph } from './queryGraph'\nimport { variables } from './variables'\nimport { configuration } from './configuration'\nimport { steps } from './steps'\nimport { step } from './step'\n\nconst appReducer = combineReducers({\n    queryGraph,\n    variables,\n    algorithmIndex,\n    steps,\n    step,\n    configuration\n})\n\nconst rootReducer = (state, action) => {\n    if (action.type === 'CLEAR_STATE') {\n        state = undefined\n    }\n    return appReducer(state, action)\n}\n\nexport default rootReducer","import {\n    ADD_VARIABLE_ROW,\n    POP_VARIABLE_ROW\n} from '../constants/ActionTypes'\n\nexport function variables(state = [], action) {\n    switch (action.type) {\n        case ADD_VARIABLE_ROW:\n            return [...state, action.variableRow]\n        case POP_VARIABLE_ROW:\n            return state.slice(0, -1)\n        default:\n            return state\n    }\n}\n","import {\n    CHANGE_ALGORITHM\n} from '../constants/ActionTypes'\n\nexport function algorithmIndex(state = 0, action) {\n    switch (action.type) {\n        case CHANGE_ALGORITHM:\n            return action.algorithmIndex\n        default:\n            return state\n    }\n}\n","import {\n    UPDATE_STEPS\n} from '../constants/ActionTypes'\n\nexport function steps(state = [], action) {\n    switch (action.type) {\n        case UPDATE_STEPS:\n            return action.steps\n        default:\n            return state\n    }\n}\n","import {\n    INCREASE_STEP,\n    DECREASE_STEP\n} from '../constants/ActionTypes'\n\nexport function step(state = 0, action) {\n    switch (action.type) {\n        case INCREASE_STEP:\n            return state + action.increase\n        case DECREASE_STEP:\n            return state - action.decrease\n        default:\n            return state\n    }\n}\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport { createStore, applyMiddleware, compose } from 'redux'\nimport { Provider } from 'react-redux'\nimport thunk from 'redux-thunk'\nimport rootReducer from './reducers'\nimport * as serviceWorker from './serviceWorker'\n\nexport const store = createStore(\n    rootReducer,\n    //applyMiddleware(thunk)//,\n    // Change to this if you want to use the Redux Devtools extension in Chrome.\n    compose(\n        applyMiddleware(thunk),\n        window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()\n    )\n)\n\nReactDOM.render(\n    <Provider store={store}>\n        <App />\n    </Provider>,\n    document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}